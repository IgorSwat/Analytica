{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../app-state.service\";\nimport * as i3 from \"@angular/common\";\nconst _c0 = function (a0, a1) {\n  return {\n    \"active\": a0,\n    \"disabled\": a1\n  };\n};\nfunction NavbarComponent_li_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\", 8)(1, \"a\", 9);\n    i0.ɵɵlistener(\"click\", function NavbarComponent_li_9_Template_a_click_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const button_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.navigateTo(button_r1.route));\n    });\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const button_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"routerLink\", button_r1.route)(\"ngClass\", i0.ɵɵpureFunction2(3, _c0, button_r1.active, ctx_r0.isButtonDisabled(button_r1.name)));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", button_r1.label, \" \");\n  }\n}\nclass NavbarComponent {\n  constructor(router, appStateService) {\n    this.router = router;\n    this.appStateService = appStateService;\n    // \"name\" attribute is a common identifier used for specyfic button (specifically inside AppStateService)\n    this.navButtons = [{\n      name: 'nav-data',\n      label: 'Dane',\n      route: '/data',\n      active: true\n    }, {\n      name: 'nav-normalize',\n      label: 'Normalizacja',\n      route: '/normalize',\n      active: false\n    }, {\n      name: 'nav-pca',\n      label: 'PCA',\n      route: '/pca',\n      active: false\n    }, {\n      name: 'nav-stats',\n      label: 'Statystyki',\n      route: '/stats',\n      active: false\n    }];\n    this.navButtonsState = {};\n  }\n  ngOnInit() {\n    this.appStateService.navButtonsState$.subscribe(state => {\n      this.navButtonsState = state;\n    });\n  }\n  navigateTo(route) {\n    this.router.navigate([route]);\n    this.navButtons.forEach(button => {\n      button.active = button.route == route;\n    });\n  }\n  isButtonDisabled(buttonName) {\n    return !this.navButtonsState[buttonName] ?? false;\n  }\n  static #_ = this.ɵfac = function NavbarComponent_Factory(t) {\n    return new (t || NavbarComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.AppStateService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: NavbarComponent,\n    selectors: [[\"app-navbar\"]],\n    decls: 10,\n    vars: 1,\n    consts: [[1, \"navbar\", \"navbar-expand-lg\", \"bg-primary\", \"navbar-full-height\", \"shadow\"], [1, \"container-fluid\"], [\"href\", \"#\", 1, \"logo-field\"], [1, \"navbar-brand\"], [1, \"material-symbols-outlined\", \"nav-icon\"], [\"id\", \"navbarNav\", 1, \"collapse\", \"navbar-collapse\"], [1, \"navbar-nav\", \"ml-auto\"], [\"class\", \"nav-item\", 4, \"ngFor\", \"ngForOf\"], [1, \"nav-item\"], [1, \"nav-link\", \"btn\", \"btn-primary\", \"btn-block\", 3, \"routerLink\", \"ngClass\", \"click\"]],\n    template: function NavbarComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"nav\", 0)(1, \"div\", 1)(2, \"a\", 2)(3, \"div\", 3);\n        i0.ɵɵtext(4, \"Analytica\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"div\", 4);\n        i0.ɵɵtext(6, \"tenancy\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(7, \"div\", 5)(8, \"ul\", 6);\n        i0.ɵɵtemplate(9, NavbarComponent_li_9_Template, 3, 6, \"li\", 7);\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"ngForOf\", ctx.navButtons);\n      }\n    },\n    dependencies: [i3.NgClass, i3.NgForOf, i1.RouterLink],\n    styles: [\".nav-container[_ngcontent-%COMP%] {\\n    width: 100%;\\n    height: 100%;\\n    padding: 0;\\n    display: flex;\\n    flex-direction: row;\\n}\\n\\n.logo-field[_ngcontent-%COMP%] {\\n    display: flex;\\n    align-items: center;\\n    text-decoration: none;\\n}\\n\\n.navbar-brand[_ngcontent-%COMP%] {\\n    color: white;\\n}\\n\\n.nav-icon[_ngcontent-%COMP%] {\\n    font-size: 2.5em;\\n    color: white;\\n    -webkit-user-select: none;\\n            user-select: none;\\n}\\n\\n.navbar-nav[_ngcontent-%COMP%] {\\n    height: 100%;\\n}\\n\\n.nav-item[_ngcontent-%COMP%] {\\n    height: 100%;\\n    margin-left: 0.5em;\\n    margin-right: 0.5em;\\n    border-radius: 0;\\n}\\n\\n.nav-link[_ngcontent-%COMP%] {\\n    min-width: 7em;\\n    font-size: 1.4em;\\n    font-weight: bold;\\n}\\n\\n.disabled[_ngcontent-%COMP%] {\\n    color: rgb(68, 67, 67);\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbmF2YmFyL25hdmJhci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksV0FBVztJQUNYLFlBQVk7SUFDWixVQUFVO0lBQ1YsYUFBYTtJQUNiLG1CQUFtQjtBQUN2Qjs7QUFFQTtJQUNJLGFBQWE7SUFDYixtQkFBbUI7SUFDbkIscUJBQXFCO0FBQ3pCOztBQUVBO0lBQ0ksWUFBWTtBQUNoQjs7QUFFQTtJQUNJLGdCQUFnQjtJQUNoQixZQUFZO0lBQ1oseUJBQWlCO1lBQWpCLGlCQUFpQjtBQUNyQjs7QUFFQTtJQUNJLFlBQVk7QUFDaEI7O0FBRUE7SUFDSSxZQUFZO0lBQ1osa0JBQWtCO0lBQ2xCLG1CQUFtQjtJQUNuQixnQkFBZ0I7QUFDcEI7O0FBRUE7SUFDSSxjQUFjO0lBQ2QsZ0JBQWdCO0lBQ2hCLGlCQUFpQjtBQUNyQjs7QUFFQTtJQUNJLHNCQUFzQjtBQUMxQiIsInNvdXJjZXNDb250ZW50IjpbIi5uYXYtY29udGFpbmVyIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgcGFkZGluZzogMDtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xyXG59XHJcblxyXG4ubG9nby1maWVsZCB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcclxufVxyXG5cclxuLm5hdmJhci1icmFuZCB7XHJcbiAgICBjb2xvcjogd2hpdGU7XHJcbn1cclxuXHJcbi5uYXYtaWNvbiB7XHJcbiAgICBmb250LXNpemU6IDIuNWVtO1xyXG4gICAgY29sb3I6IHdoaXRlO1xyXG4gICAgdXNlci1zZWxlY3Q6IG5vbmU7XHJcbn1cclxuXHJcbi5uYXZiYXItbmF2IHtcclxuICAgIGhlaWdodDogMTAwJTtcclxufVxyXG5cclxuLm5hdi1pdGVtIHtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIG1hcmdpbi1sZWZ0OiAwLjVlbTtcclxuICAgIG1hcmdpbi1yaWdodDogMC41ZW07XHJcbiAgICBib3JkZXItcmFkaXVzOiAwO1xyXG59XHJcblxyXG4ubmF2LWxpbmsge1xyXG4gICAgbWluLXdpZHRoOiA3ZW07XHJcbiAgICBmb250LXNpemU6IDEuNGVtO1xyXG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbn1cclxuXHJcbi5kaXNhYmxlZCB7XHJcbiAgICBjb2xvcjogcmdiKDY4LCA2NywgNjcpO1xyXG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}\nexport { NavbarComponent };","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵlistener","NavbarComponent_li_9_Template_a_click_1_listener","restoredCtx","ɵɵrestoreView","_r3","button_r1","$implicit","ctx_r2","ɵɵnextContext","ɵɵresetView","navigateTo","route","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵproperty","ɵɵpureFunction2","_c0","active","ctx_r0","isButtonDisabled","name","ɵɵtextInterpolate1","label","NavbarComponent","constructor","router","appStateService","navButtons","navButtonsState","ngOnInit","navButtonsState$","subscribe","state","navigate","forEach","button","buttonName","_","ɵɵdirectiveInject","i1","Router","i2","AppStateService","_2","selectors","decls","vars","consts","template","NavbarComponent_Template","rf","ctx","ɵɵtemplate","NavbarComponent_li_9_Template"],"sources":["C:\\Users\\cppon\\OneDrive\\Pulpit\\io_zadanie\\Frontend\\IO-2024\\frontend\\src\\app\\navbar\\navbar.component.ts","C:\\Users\\cppon\\OneDrive\\Pulpit\\io_zadanie\\Frontend\\IO-2024\\frontend\\src\\app\\navbar\\navbar.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AppStateService } from '../app-state.service';\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.css']\r\n})\r\n\r\n\r\nexport class NavbarComponent {\r\n  // \"name\" attribute is a common identifier used for specyfic button (specifically inside AppStateService)\r\n  navButtons = [\r\n    { name: 'nav-data', label: 'Dane', route: '/data', active: true},\r\n    { name: 'nav-normalize', label: 'Normalizacja', route: '/normalize', active: false},\r\n    { name: 'nav-pca', label: 'PCA', route: '/pca', active: false},\r\n    { name: 'nav-stats', label: 'Statystyki', route: '/stats', active: false}\r\n  ];\r\n  navButtonsState: { [key: string]: boolean} = {};\r\n\r\n  constructor(private router: Router, private appStateService : AppStateService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.appStateService.navButtonsState$.subscribe(state => {this.navButtonsState = state;});\r\n  }\r\n\r\n  navigateTo(route: string): void {\r\n    this.router.navigate([route]);\r\n    this.navButtons.forEach(button => {button.active = (button.route == route);})\r\n  }\r\n\r\n  isButtonDisabled(buttonName: string) : boolean {\r\n    return !this.navButtonsState[buttonName] ?? false;\r\n  }\r\n}\r\n","<nav class=\"navbar navbar-expand-lg bg-primary navbar-full-height shadow\">\r\n  <div class=\"container-fluid\">\r\n    <a class=\"logo-field\" href=\"#\"> <!-- TODO: replace the href to match correct routing if needed -->\r\n        <div class=\"navbar-brand\">Analytica</div>\r\n        <div class=\"material-symbols-outlined nav-icon\">tenancy</div>\r\n    </a>\r\n    <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n      <ul class=\"navbar-nav ml-auto\">\r\n        <li *ngFor=\"let button of navButtons\" class=\"nav-item\">\r\n            <a [routerLink]=\"button.route\" (click)=\"navigateTo(button.route)\" class=\"nav-link btn btn-primary btn-block\"\r\n            [ngClass]=\"{'active': button.active, 'disabled': isButtonDisabled(button.name)}\">\r\n                {{ button.label }}\r\n            </a>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n</nav>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}