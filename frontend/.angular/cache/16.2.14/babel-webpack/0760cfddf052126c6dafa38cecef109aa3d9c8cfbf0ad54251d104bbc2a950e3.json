{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./data.service\";\nclass FileUploadService {\n  constructor(http, dataService) {\n    this.http = http;\n    this.dataService = dataService;\n    this.uploadUrl = \"http://localhost:5000/upload\";\n  }\n  uploadFile(file) {\n    const formData = new FormData();\n    formData.append('file', file, file.name);\n    this.dataService.getData();\n    return this.http.post(this.uploadUrl, formData);\n  }\n  static #_ = this.ɵfac = function FileUploadService_Factory(t) {\n    return new (t || FileUploadService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.DataService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: FileUploadService,\n    factory: FileUploadService.ɵfac,\n    providedIn: 'root'\n  });\n}\nexport { FileUploadService };","map":{"version":3,"names":["FileUploadService","constructor","http","dataService","uploadUrl","uploadFile","file","formData","FormData","append","name","getData","post","_","i0","ɵɵinject","i1","HttpClient","i2","DataService","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\cppon\\OneDrive\\Pulpit\\io_zadanie\\Frontend\\IO-2024\\frontend\\src\\app\\file-upload.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { DataService } from './data.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class FileUploadService {\r\n  private uploadUrl = \"http://localhost:5000/upload\";\r\n\r\n  constructor(private http : HttpClient, private dataService: DataService) { }\r\n\r\n  uploadFile(file: File): Observable<any> {\r\n    const formData: FormData = new FormData();\r\n    formData.append('file', file, file.name);\r\n    this.dataService.getData();\r\n    return this.http.post(this.uploadUrl, formData);\r\n\r\n\r\n  }\r\n  \r\n}\r\n"],"mappings":";;;AAKA,MAIaA,iBAAiB;EAG5BC,YAAoBC,IAAiB,EAAUC,WAAwB;IAAnD,KAAAD,IAAI,GAAJA,IAAI;IAAuB,KAAAC,WAAW,GAAXA,WAAW;IAFlD,KAAAC,SAAS,GAAG,8BAA8B;EAEyB;EAE3EC,UAAUA,CAACC,IAAU;IACnB,MAAMC,QAAQ,GAAa,IAAIC,QAAQ,EAAE;IACzCD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEH,IAAI,EAAEA,IAAI,CAACI,IAAI,CAAC;IACxC,IAAI,CAACP,WAAW,CAACQ,OAAO,EAAE;IAC1B,OAAO,IAAI,CAACT,IAAI,CAACU,IAAI,CAAC,IAAI,CAACR,SAAS,EAAEG,QAAQ,CAAC;EAGjD;EAAC,QAAAM,CAAA,G;qBAZUb,iBAAiB,EAAAc,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,WAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAjBpB,iBAAiB;IAAAqB,OAAA,EAAjBrB,iBAAiB,CAAAsB,IAAA;IAAAC,UAAA,EAHhB;EAAM;;SAGPvB,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}